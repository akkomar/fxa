name: Docker

on:
  workflow_dispatch:
    inputs:
      git_tag:
        type: string
        required: true

jobs:
  docker:
    name: Docker build and push to GAR
    runs-on: ubuntu-latest
    environment: build
    permissions:
      contents: read
      id-token: write
    env:
      GAR_LOCATION: us
      GAR_REPOSITORY: fxa-prod
      GCP_PROJECT_ID: moz-fx-fxa-prod
      IMAGE: fxa-mono
      RUN_ID: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      TAG: ${{ github.event.inputs.git_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG }}

      - uses: actions/setup-node@v4
        with:
          cache: yarn

      - run: ./_scripts/l10n/clone.sh

      - run: ./.circleci/base-install.sh

      - run: ./_scripts/create-version-json.sh

      - uses: docker/setup-buildx-action@v3

      - id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          service_account: artifact-writer@${{ env.GCP_PROJECT_ID}}.iam.gserviceaccount.com
          workload_identity_provider: ${{ vars.GCPV2_GITHUB_WORKLOAD_IDENTITY_PROVIDER }}

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: _dev/docker/mono/Dockerfile
          tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY}}/${{ env.IMAGE}}:${{ env.TAG }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
